#! /usr/bin/python

import time
from scapy.all import *
import socket
import sys

def custom_action(packet):
 global counter
 counter += 1
 return 'Packet #{}: {} ==> {}'.format(counter, packet[0][1].src, packet[0][1].dst)

print(" Running Arp Ping")
#arpPingIPList = ["127.0.0.1"]
#arping(IPRange)
#ans, unans = srp(Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=IPRange), timeout=5)

a = IP(ttl=10)
print(a.show)
print("Source:", a.src)
print("TTL:", a.ttl)
#ans,unans = srp(IP(src="192.168.0.11",dst="192.168.0.15")/ICMP()/"Hello World")
for x in range( 0, 2):
 ans,unans=srp(Ether(src="AA:AA:AA:AA:BB:BB",dst="ff:ff:ff:ff:ff:ff")/ARP(pdst="192.168.0.5"),timeout=2)

#for snd,rcv in ans:
# print (rcv.sprintf(r"%Ether.src% & %ARP.psrc%\\"))
# print("finished")
 
#print("Sniffing")( 
#sniff(lfilter=lambda d: d.src == "AA:AA:AA:AA:BB:BB:BB:BB", prn=custom_action)

#================##
#Server part




# Create a TCP/IP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Bind the socket to the address given on the command line
server_name = "192.168.0.11"
server_address = (server_name, 9999)
print('starting up on {} port {}'.format(*server_address))
sock.bind(server_address)
sock.listen(1)

while True:
 print('waiting for a connection')
 connection, client_address = sock.accept()
 try:
  print('client connected:', client_address)
  data = connection.recv(1024)
  print('received {!r}'.format(data))
  while True:
   #command to send to child
   DataSend = input("Enter Command to send> ")
   if DataSend:
    DataSend2 = str(DataSend)
    print(DataSend2)
    connection.sendall(DataSend.encode())
   else:
    break
   #receiving from child


   data = connection.recv(1024)
   if data:
    print(data.decode())
   else:
    break            
 finally:
  connection.close()